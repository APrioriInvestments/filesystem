# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on: push

jobs:
  unit-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11']
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    # We don't cache pip-install results because our dependencies are not pinned
    # - name: Cache pip (Linux)
    #   if: startsWith(runner.os, 'Linux')
    #   uses: actions/cache@v2
    #   with:
    #     # This path is specific to Ubuntu
    #     path: ~/.cache/pip
    #     # Look to see if there is a cache hit for the corresponding requirements file
    #     key: ${{ runner.os }}-pip-${{ hashFiles('Pipfile.lock') }}
    #     restore-keys: |
    #       ${{ runner.os }}-pip-

    # - name: Cache pip (MacOS)
    #   if: startsWith(runner.os, 'macOS')
    #   uses: actions/cache@v2
    #   with:
    #     path: ~/Library/Caches/pip
    #     key: ${{ runner.os }}-pip-${{ hashFiles('Pipfile.lock') }}
    #     restore-keys: |
    #       ${{ runner.os }}-pip-


    - name: Install
      timeout-minutes: 4  # Should run in ~30 sec
      run: |
        echo 'UPGRADE PIP'
        pip install --upgrade pip wheel
        echo 'INSTALL DEV REQUIREMENTS'
        pip install .[dev]

    # - name: Setup Debug SSH Session
    #   uses: mxschmitt/action-tmate@v3

    - name: Run Unit Tests
      timeout-minutes: 5  # Runs in ~1m30s
      env:
        TRAVIS_CI: 1
      run: |
        pytest --verbose --capture=no --log-level=info --log-cli-level=info

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Install
      timeout-minutes: 4  # Runs in 30 sec
      run: |
        python -m pip install --upgrade pip wheel
        python -m pip install .[dev] 

    - name: Check black and lint
      timeout-minutes: 1  # Runs in 2 sec
      run: |
        flake8
        black filesystem tests
