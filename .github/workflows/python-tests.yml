# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python Tests

on: push

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Install
      timeout-minutes: 4  # Runs in 30 sec
      run: |
        python -m pip install --upgrade pip wheel
        python -m pip install .[dev]

    - name: Check black and lint
      timeout-minutes: 1  # Runs in 2 sec
      run: |
        flake8
        black filesystem tests

  unit-test:
    needs: lint
    if: success()
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.10', '3.11', '3.12', '3.13']
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    # We don't cache pip-install results because this is a library and
    # therefore our dependencies are not pinned.
    - name: Install
      timeout-minutes: 4  # Should run in ~30 sec
      run: |
        echo 'UPGRADE PIP'
        pip install --upgrade pip wheel
        echo 'INSTALL DEV REQUIREMENTS'
        pip install .[dev]

    - name: Run Unit Tests
      timeout-minutes: 5  # Runs in ~2m00s
      env:
        TRAVIS_CI: 1
      run: |
        pytest -m 'not perf' \
          --verbose --capture=no --log-level=info --log-cli-level=info

    - name: Run Perf Tests
      timeout-minutes: 5  # Runs in ~15s but needed a couple of minutes before the fix
      env:
        TRAVIS_CI: 1
      run: |
        pytest -m perf \
          --verbose --capture=no --log-level=info --log-cli-level=info
